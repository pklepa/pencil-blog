[{"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/index.js":"1","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/App.js":"2","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/client.js":"3","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Navbar/Navbar.js":"4","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Main/Main.js":"5","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Card/Card.js":"6","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Button/Button.js":"7","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Footer/Footer.js":"8","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/HomePage/HomePage.js":"9","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/Routes.js":"10","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/ArticlePage/ArticlePage.js":"11","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Article/Article.js":"12","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/ArticleContent/ArticleContent.js":"13","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/AboutPage/AboutPage.js":"14","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/ContactPage/ContactPage.js":"15","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Modal/Modal.js":"16","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/LinkButton/LinkButton.js":"17","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/CategoriesPage/CategoriesPage.js":"18","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/TagsContainer/TagsContainer.js":"19","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/FBCommentsContainer/FBCommentsContainer.js":"20","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/assets/utils/useWindowDimensions.js":"21","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/FacebookComments/FacebookComments.js":"22"},{"size":197,"mtime":1609761747629,"results":"23","hashOfConfig":"24"},{"size":319,"mtime":1609957196354,"results":"25","hashOfConfig":"24"},{"size":204,"mtime":1609764986357,"results":"26","hashOfConfig":"24"},{"size":671,"mtime":1609960075911,"results":"27","hashOfConfig":"24"},{"size":175,"mtime":1609775037743,"results":"28","hashOfConfig":"24"},{"size":1072,"mtime":1610046867722,"results":"29","hashOfConfig":"24"},{"size":380,"mtime":1610046287619,"results":"30","hashOfConfig":"24"},{"size":681,"mtime":1609960687062,"results":"31","hashOfConfig":"24"},{"size":6012,"mtime":1610119163702,"results":"32","hashOfConfig":"24"},{"size":1069,"mtime":1610116596380,"results":"33","hashOfConfig":"24"},{"size":735,"mtime":1610139557556,"results":"34","hashOfConfig":"24"},{"size":3565,"mtime":1610138289199,"results":"35","hashOfConfig":"24"},{"size":288,"mtime":1609957196394,"results":"36","hashOfConfig":"24"},{"size":2089,"mtime":1610023058515,"results":"37","hashOfConfig":"24"},{"size":2125,"mtime":1610046499872,"results":"38","hashOfConfig":"24"},{"size":481,"mtime":1610049352124,"results":"39","hashOfConfig":"24"},{"size":349,"mtime":1610045335519,"results":"40","hashOfConfig":"24"},{"size":2836,"mtime":1610125759105,"results":"41","hashOfConfig":"24"},{"size":190,"mtime":1610119034044,"results":"42","hashOfConfig":"24"},{"size":533,"mtime":1610138609608,"results":"43","hashOfConfig":"24"},{"size":591,"mtime":1610138242390,"results":"44","hashOfConfig":"24"},{"size":530,"mtime":1610139489148,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"2zu4y3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/index.js",[],["95","96"],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/App.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/client.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Navbar/Navbar.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Main/Main.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Card/Card.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Button/Button.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Footer/Footer.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/HomePage/HomePage.js",["97"],"import React, { useEffect, useState } from \"react\";\nimport { client } from \"../../client\";\nimport { Link } from \"react-router-dom\";\n\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Main from \"../../components/Main/Main\";\nimport Card from \"../../components/Card/Card\";\nimport Footer from \"../../components/Footer/Footer\";\n\nimport TwitterLogo from \"../../assets/images/bxl-twitter.svg\";\nimport YoutubeLogo from \"../../assets/images/bxl-youtube.svg\";\nimport InstagramLogo from \"../../assets/images/bxl-instagram.svg\";\nimport PinterestLogo from \"../../assets/images/bxl-pinterest.svg\";\nimport Button from \"../../components/Button/Button\";\nimport TagsContainer from \"../../components/TagsContainer/TagsContainer\";\n\nconst SOCIAL_MEDIA_IMG_MAP = {\n  instagram: InstagramLogo,\n  youtube: YoutubeLogo,\n  pinterest: PinterestLogo,\n  twitter: TwitterLogo,\n};\n\nfunction HomePage() {\n  const [articles, setArticles] = useState(false);\n  const [mainAuthor, setMainAuthor] = useState(false);\n  const [categories, setCategories] = useState(false);\n  const [limit, setLimit] = useState(7);\n  const [total, setTotal] = useState(7);\n\n  // Listens for limit changes in order to update the articles displayed\n  useEffect(() => {\n    // Fetch every blogPost up to the defined limit\n    client\n      .getEntries({\n        content_type: \"blogPost\",\n        order: \"-sys.createdAt\",\n        limit: limit,\n      })\n      .then((response) => {\n        console.log(response);\n        setTotal(response.total);\n        setArticles(response.items);\n      })\n      .catch(console.error);\n  }, [limit]);\n\n  // Fetches the unique data when the component loads\n  useEffect(() => {\n    // Fetch the main author\n    client\n      .getEntry(\"LzXckKAx0cIhXvTdbsW23\")\n      .then((res) => {\n        setMainAuthor(res.fields);\n      })\n      .catch(console.error);\n\n    // Fetch every category for the tags sidebar\n    client\n      .getEntries({ content_type: \"category\" })\n      .then((response) => {\n        // Order categories alphabetically\n        response.items.sort((a, b) =>\n          a.fields.name.localeCompare(b.fields.name)\n        );\n        setCategories(response.items);\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <Main>\n        {articles && (\n          <Card\n            isFeatured\n            title={articles[0].fields.title}\n            imgUrl={articles[0].fields.featuredImage.fields.file.url}\n            tag={articles[0].fields.categories[0].fields.name}\n            content={articles[0].fields.content}\n            author={articles[0].fields.author.fields.name}\n            date={articles[0].sys.createdAt}\n            articleId={articles[0].sys.id}\n          />\n        )}\n\n        <div className=\"inner-grid\">\n          <div className=\"articles-container\">\n            {articles &&\n              articles.map((article, index) => {\n                return (\n                  index > 0 && (\n                    <Card\n                      key={`card-${index}`}\n                      title={article.fields.title}\n                      imgUrl={article.fields.featuredImage.fields.file.url}\n                      tag={article.fields.categories[0].fields.name}\n                      content={article.fields.content}\n                      author={article.fields.author.fields.name}\n                      date={article.sys.createdAt}\n                      articleId={article.sys.id}\n                    />\n                  )\n                );\n              })}\n          </div>\n\n          <nav className=\"side-nav-container\">\n            {mainAuthor && (\n              <div className=\"author-preview\">\n                <div className=\"preview-header\">\n                  <div\n                    className=\"profile-pic\"\n                    style={{\n                      backgroundImage: `url(\"${mainAuthor.profileImg.fields.file.url}\")`,\n                    }}\n                  ></div>\n                  <div className=\"profile-details\">\n                    <h1>{mainAuthor.name}</h1>\n                    <span>{mainAuthor.title}</span>\n                  </div>\n                </div>\n                <p className=\"preview-description\">{mainAuthor.description}</p>\n\n                <div className=\"preview-footer\">\n                  <span>View on: </span>\n                  <div className=\"social-media-icons\">\n                    {Object.entries(mainAuthor.socialMedia).map(\n                      (item, index) => {\n                        return (\n                          <a\n                            key={`social-${index}`}\n                            href={item[1]}\n                            className=\"social-media-icon\"\n                            style={{\n                              backgroundImage: `url(${\n                                SOCIAL_MEDIA_IMG_MAP[item[0]]\n                              })`,\n                            }}\n                          ></a>\n                        );\n                      }\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"sidebar-content\">\n              <h1>Tags</h1>\n\n              <TagsContainer>\n                {categories &&\n                  categories.map((category, index) => {\n                    return (\n                      <Link\n                        to={`/category/${category.sys.id}`}\n                        className=\"tag\"\n                        key={`tag-${index}`}\n                      >\n                        {category.fields.name}\n                      </Link>\n                    );\n                  })}\n              </TagsContainer>\n            </div>\n          </nav>\n        </div>\n\n        {limit < total && (\n          <div className=\"load-btn-wrapper\">\n            <Button secondary onClick={() => setLimit(limit + 6)}>\n              Load more\n            </Button>\n          </div>\n        )}\n      </Main>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default HomePage;\n","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/Routes.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/ArticlePage/ArticlePage.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Article/Article.js",["98"],"import React, { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport { client } from \"../../client\";\n\nimport \"./Article.css\";\n\nimport TwitterLogo from \"../../assets/images/bxl-twitter.svg\";\nimport YoutubeLogo from \"../../assets/images/bxl-youtube.svg\";\nimport InstagramLogo from \"../../assets/images/bxl-instagram.svg\";\nimport PinterestLogo from \"../../assets/images/bxl-pinterest.svg\";\nimport ArticleContent from \"../ArticleContent/ArticleContent\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst SOCIAL_MEDIA_IMG_MAP = {\n  instagram: InstagramLogo,\n  youtube: YoutubeLogo,\n  pinterest: PinterestLogo,\n  twitter: TwitterLogo,\n};\n\nfunction Article({ articleId }) {\n  const [article, setArticle] = useState(false);\n  const [articleAuthor, setArticleAuthor] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    client\n      .getEntry(articleId)\n      .then((res) => {\n        console.log(res);\n        setArticle(res);\n        setArticleAuthor(res.fields.author);\n      })\n      .catch(console.error);\n  }, [articleId]);\n\n  return (\n    <div className=\"container article-container\">\n      {article && articleAuthor && (\n        <>\n          <header className=\"article-header\">\n            <h1 className=\"article-title\">{article.fields.title}</h1>\n\n            <div className=\"author-details-container\">\n              <div\n                className=\"author-profile-pic\"\n                style={{\n                  backgroundImage: `url(\"${articleAuthor.fields.profileImg.fields.file.url}\")`,\n                }}\n              ></div>\n\n              <div className=\"author-details-wrapper\">\n                <div className=\"author-details-left\">\n                  <span className=\"author-name\">\n                    {articleAuthor.fields.name}\n                  </span>\n                  <span className=\"article-date\">\n                    {format(new Date(article.sys.createdAt), \"MMMM d, yyyy\")}\n                  </span>\n                </div>\n\n                <div className=\"author-details-right\">\n                  <div className=\"social-media-icons\">\n                    {Object.entries(articleAuthor.fields.socialMedia).map(\n                      (item, index) => {\n                        return (\n                          <a\n                            key={`social-${index}`}\n                            href={item[1]}\n                            className=\"social-media-icon\"\n                            style={{\n                              backgroundImage: `url(${\n                                SOCIAL_MEDIA_IMG_MAP[item[0]]\n                              })`,\n                            }}\n                          ></a>\n                        );\n                      }\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <div\n            className=\"featured-image\"\n            style={{\n              backgroundImage: `url(\"${article.fields.featuredImage.fields.file.url}\")`,\n            }}\n            onClick={() => setShowModal(true)}\n          ></div>\n\n          <Modal showModal={showModal} setShowModal={setShowModal}>\n            <div\n              className=\"full-screen-image\"\n              style={{\n                backgroundImage: `url(\"${article.fields.featuredImage.fields.file.url}\")`,\n              }}\n            ></div>\n          </Modal>\n\n          <ArticleContent content={article.fields.content} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Article;\n","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/ArticleContent/ArticleContent.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/AboutPage/AboutPage.js",["99","100"],"import React, { useEffect, useState } from \"react\";\nimport { client } from \"../../client\";\nimport ArticleContent from \"../../components/ArticleContent/ArticleContent\";\n\nimport Footer from \"../../components/Footer/Footer\";\nimport Navbar from \"../../components/Navbar/Navbar\";\n\nimport TwitterLogo from \"../../assets/images/bxl-twitter.svg\";\nimport YoutubeLogo from \"../../assets/images/bxl-youtube.svg\";\nimport InstagramLogo from \"../../assets/images/bxl-instagram.svg\";\nimport PinterestLogo from \"../../assets/images/bxl-pinterest.svg\";\n\nimport \"./AboutPage.css\";\n\nconst SOCIAL_MEDIA_IMG_MAP = {\n  instagram: InstagramLogo,\n  youtube: YoutubeLogo,\n  pinterest: PinterestLogo,\n  twitter: TwitterLogo,\n};\n\nfunction AboutPage() {\n  const [mainAuthor, setMainAuthor] = useState(false);\n\n  useEffect(() => {\n    client\n      .getEntry(\"LzXckKAx0cIhXvTdbsW23\")\n      .then((res) => {\n        console.log(res);\n        setMainAuthor(res.fields);\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <div className=\"container\">\n        {mainAuthor && (\n          <div className=\"about-intro\">\n            <div\n              className=\"about-profile-pic\"\n              style={{\n                backgroundImage: `url(${mainAuthor.profileImg.fields.file.url})`,\n              }}\n            ></div>\n            <h1>{mainAuthor.name}</h1>\n            <span>{mainAuthor.title}</span>\n            <p>{mainAuthor.description}</p>\n\n            <div className=\"social-media-icons\">\n              {Object.entries(mainAuthor.socialMedia).map((item, index) => {\n                return (\n                  <a\n                    key={`social-${index}`}\n                    href={item[1]}\n                    className=\"social-media-icon\"\n                    style={{\n                      backgroundImage: `url(${SOCIAL_MEDIA_IMG_MAP[item[0]]})`,\n                    }}\n                  ></a>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default AboutPage;\n","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/ContactPage/ContactPage.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/Modal/Modal.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/LinkButton/LinkButton.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/CategoriesPage/CategoriesPage.js",["101"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { client } from \"../../client\";\nimport Card from \"../../components/Card/Card\";\n\nimport Footer from \"../../components/Footer/Footer\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport TagsContainer from \"../../components/TagsContainer/TagsContainer\";\n\nimport \"./CategoriesPage.css\";\n\nfunction CategoriesPage({ categoryId }) {\n  const [categories, setCategories] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState(false);\n  const [categoryEntries, setCategoryEntries] = useState(false);\n\n  // Fetches the unique data when the component loads\n  useEffect(() => {\n    // Fetch every category for the tags sidebar\n    client\n      .getEntries({ content_type: \"category\" })\n      .then((response) => {\n        // Order categories alphabetically\n        response.items.sort((a, b) =>\n          a.fields.name.localeCompare(b.fields.name)\n        );\n        setCategories(response.items);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    // Fetch the every entry for current category\n    client\n      .getEntries({\n        links_to_entry: categoryId,\n      })\n      .then((res) => {\n        console.log(\"Entries in the current category: \", res);\n        setCategoryEntries(res.items);\n      })\n      .catch(console.error);\n  }, [currentCategory]);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <div className=\"container categories-container\">\n        <TagsContainer>\n          {categories &&\n            categories.map((category, index) => {\n              return (\n                <Link\n                  onClick={() => setCurrentCategory(category.sys.id)}\n                  to={`/category/${category.sys.id}`}\n                  className={`tag ${\n                    category.sys.id === categoryId ? \"selected\" : \"\"\n                  }`}\n                  key={`tag-${index}`}\n                >\n                  {category.fields.name}\n                </Link>\n              );\n            })}\n        </TagsContainer>\n\n        <div className=\"articles-container\">\n          {categoryEntries &&\n            categoryEntries.map((article, index) => {\n              return (\n                <Card\n                  key={`card-${index}`}\n                  title={article.fields.title}\n                  imgUrl={article.fields.featuredImage.fields.file.url}\n                  tag={article.fields.categories[0].fields.name}\n                  content={article.fields.content}\n                  author={article.fields.author.fields.name}\n                  date={article.sys.createdAt}\n                  articleId={article.sys.id}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default CategoriesPage;\n","/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/TagsContainer/TagsContainer.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/views/FBCommentsContainer/FBCommentsContainer.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/assets/utils/useWindowDimensions.js",[],"/mnt/c/Users/pklep/dev/learning/projects/pencil-blog/src/components/FacebookComments/FacebookComments.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":133,"column":27,"nodeType":"108","endLine":142,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":67,"column":27,"nodeType":"108","endLine":76,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":55,"column":19,"nodeType":"108","endLine":62,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":43,"column":6,"nodeType":"115","endLine":43,"endColumn":23,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'ArticleContent' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categoryId'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [categoryId, currentCategory]",{"range":"122","text":"123"},[1378,1395],"[categoryId, currentCategory]"]